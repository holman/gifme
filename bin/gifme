#!/usr/bin/env ruby

require 'optparse'
require 'open-uri'
require 'fileutils'

options = {
  :output   => "#{ENV['HOME']}/Desktop/animated.gif",
  :reverse  => false,
  :small    => false,
  :large    => false,
  :width    => 500,
  :delay    => 20,
  :cloudapp => system("which cloudapp 2>&1 > /dev/null")
}

parser = OptionParser.new do |opts|
  opts.banner = "Usage: gifme [options] FILES"

  opts.separator ""
  opts.separator "  FILES can be listed out, like `file1.jpg file2.jpg`, or it"
  opts.separator "  can be a normal shell glob, like `*.jpg`."

  opts.separator ""
  opts.separator "Options:"

  opts.on("-r", "--reverse", "Reverse the GIF to make it loopable") do |reverse|
    options[:reverse] = true
  end

  opts.on("-o", "--output /path/to/output", "Set the animation's output directory") do |out|
    options[:output] = out
  end

  opts.on("-d", "--delay DELAY", "Set the delay between frames (default: 20)") do |delay|
    options[:delay] = delay
  end

  opts.on("-w", "--width PIXELS", "Set the width of the image (default is 500px)") do |width|
    options[:width] = width
  end
  
  opts.on("-s", "--small", "Set the width to the most narrow image") do |small|
    options[:small] = true
  end

  opts.on("-l", "--large", "Set the width to the widest image") do |large|
    options[:large] = true
  end

  opts.on("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

parser.parse!
files = *ARGV

unless system("which convert 2>&1 > /dev/null")
  puts "You need to install ImageMagick first.\n\n"
  puts "If you're on a Mac, this should be as easy as:"
  puts "  brew install imagemagick"
  exit(1)
end

unless files
  puts parser.help
  exit(1)
end

# WORKING WITH REMOTE FILES
if files.first[0..3] == 'http'
  path = "/tmp/downloaded-gifme.gif"
  open(path, 'wb') do |file|
    file << open(files.first).read
  end

  FileUtils.rm_rf "/tmp/gifme"
  FileUtils.mkdir "/tmp/gifme"
  system "cd /tmp/gifme && convert #{path} -coalesce frame_%d.gif"

  files = Dir.entries("/tmp/gifme")
  files.delete(".")
  files.delete("..")
  files = files.collect{|f| "/tmp/gifme/#{f}"}
end

if (options[:small] || options[:large])
  widths = []
  files.each do |file| 
    filename = file.dup.gsub(/([^A-Za-z0-9_\-,:\/@\n])/n, "\\\\\\1")
    width = `identify -format %w #{filename}`
    widths << width
  end
  options[:width] = options[:small] ? widths.min : widths.max
end

cmd  = ["convert"]
cmd << "-delay"  << options[:delay].to_s
cmd << "-loop"   << "0"
cmd << "-resize" << options[:width].to_s
cmd << "-layers" << "OptimizeTransparency"
cmd += files

if options[:reverse]
  cmd += files.reverse[1..-2]
end

cmd << options[:output]

if system(*cmd)
  puts "You now have a handsome animation at #{options[:output]}"
else
  puts "Something broke when we were animating your gif. Shit."
  exit(1)
end

if options[:cloudapp]
  puts "Now we're uploading it to CloudApp"
  system "cloudapp #{options[:output]}"
end
