#!/usr/bin/env ruby

require 'optparse'
require 'open-uri'
require 'fileutils'

timestamp = Time.now.strftime(fmt='%F_%Hh-%Mm-%Ss')

options = {
  :output   => "#{ENV['HOME']}/Desktop/animated-#{timestamp}.gif",
  :reverse  => false,
  :width    => 500,
  :delay    => 20,
  :cloudapp => system("which cloudapp 2>&1 > /dev/null"),
  :direct   => false,
  :quiet    => false,
}

parser = OptionParser.new do |opts|
  opts.version = "0.0.8"
  opts.banner = "Usage: gifme [-h] [-r] [-o /path/to/output] [-d DELAY] [-w PIXELS] [-q] [-v] FILES [FILES ...]"

  opts.separator ""
  opts.separator "  FILES can be listed out, like `file1.jpg file2.jpg`, or it"
  opts.separator "  can be a normal shell glob, like `*.jpg`."

  opts.separator ""
  opts.separator "Options:"

  opts.on("-r", "--reverse", "Reverse the GIF to make it loopable") do |reverse|
    options[:reverse] = true
  end

  opts.on("-o", "--output /path/to/output.gif", "Set the path to the animation's output") do |out|
    options[:output] = out
  end

  opts.on("-d", "--delay DELAY", "Set the delay between frames (default: 20)") do |delay|
    options[:delay] = delay
  end

  opts.on("-w", "--width PIXELS", "Set the width of the image (default is 500px)") do |width|
    options[:width] = width
  end

  opts.on("-v", "--version", "Shows the program version") do
    puts "gifme " + opts.version
    exit
  end

  opts.on("-t", "--direct", "Retrieves direct link to asset on Cloudapp") do
    options[:direct] = true
  end

  opts.on("-q", "--quiet", "Don't print status messages to stdout") do
    options[:quiet] = true
  end

  opts.on("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

parser.parse!
files = *ARGV

unless system("which convert 2>&1 > /dev/null")
  puts "You need to install ImageMagick first.\n\n"
  puts "If you're on a Mac, this should be as easy as:"
  puts "  brew install imagemagick"
  exit(1)
end

unless files && files.size != 0
  puts parser.help
  exit(1)
end

# WORKING WITH REMOTE FILES
if files.first[0..3] == 'http'
  path = "/tmp/downloaded-gifme.gif"
  open(path, 'wb') do |file|
    file << open(files.first).read
  end

  FileUtils.rm_rf "/tmp/gifme"
  FileUtils.mkdir "/tmp/gifme"
  system "cd /tmp/gifme && convert #{path} -coalesce frame_%03d.gif"

  files = Dir.entries("/tmp/gifme")
  files.delete(".")
  files.delete("..")
  files = files.collect{|f| "/tmp/gifme/#{f}"}
end

cmd  = ["convert"]
cmd << "-delay"  << options[:delay].to_s
cmd << "-loop"   << "0"
cmd << "-resize" << options[:width].to_s
cmd << "-layers" << "OptimizeTransparency"
cmd += files

if options[:reverse]
  cmd += files.reverse[1..-2]
end

cmd << options[:output]

if system(*cmd)
  unless options[:quiet]
    puts "You now have a handsome animation at #{options[:output]}"
  end
else
  puts "Something broke when we were animating your gif. Shit."
  exit(1)
end

if options[:cloudapp]
  unless options[:quiet]
    puts "Now we're uploading it to CloudApp"
    cloudapp_cmd = ["cloudapp"]
    cloudapp_cmd << "--direct" if options[:direct]
    cloudapp_cmd << options[:output]
    system cloudapp_cmd.join(" ")
  end
end
